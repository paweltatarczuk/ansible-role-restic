---
# tasks file for ansible-role-restic
- name: Set architecture fact
  set_fact:
    restic_arch: "{{ 'arm' if ansible_architecture == 'armv7l' else 'amd64' }}"
    restic_arch_checksums:
      arm: sha256:9ffa244293433033702bbbbddf85e116221a7ff75c0b2bd152d9da8b6263ea6f
      amd64: sha256:41d47f100f61c503c462f53069e5c2aaad4dafec461e56b85b1de7730e4f9c4d

- name: Verify restic is present
  stat:
    path: /usr/local/bin/restic
  register: restic_binary_present
  changed_when: not restic_binary_present.stat.exists

- name: Verify restic version
  command: restic version
  when: restic_binary_present is not changed
  register: restic_binary_version
  changed_when: restic_binary_version is failed or 'restic {{ restic_version }}' not in restic_binary_version.stdout
  failed_when: false

- name: Fetch restic binary archive
  get_url:
    url: https://github.com/restic/restic/releases/download/v{{ restic_version }}/restic_{{ restic_version }}_linux_{{ restic_arch }}.bz2
    dest: /usr/local/src/restic_{{ restic_version }}_linux_{{ restic_arch }}.bz2
    checksum: "{{ restic_arch_checksums[restic_arch] }}"
  when: restic_binary_present is changed or restic_binary_version is changed

- name: Extract restic binary
  shell: bunzip2 -c /usr/local/src/restic_{{ restic_version }}_linux_{{ restic_arch }}.bz2 > /usr/local/bin/restic
  when: restic_binary_present is changed or restic_binary_version is changed

- name: Ensure restic binary is executable
  file:
    path: /usr/local/bin/restic
    state: file
    mode: '755'

- name: Ensure backup script is present
  copy:
    src: backup
    dest: /usr/local/bin/backup
    mode: '755'

- name: Ensure config directory is present
  file:
    path: /etc/backup
    state: directory
    mode: '755'

- name: Ensure config file is present
  template:
    src: config.j2
    dest: /etc/backup/config
    mode: '644'

- name: Ensure credentials file is present
  template:
    src: credentials.j2
    dest: /etc/backup/credentials
    mode: '600'

- name: Ensure backup service is present
  template:
    src: backup.service.j2
    dest: /etc/systemd/system/backup.service
    mode: '644'
  notify: Disable backup service

- name: Ensure backup timer is present
  template:
    src: backup.timer.j2
    dest: /etc/systemd/system/backup.timer
    mode: '644'
  notify: Enable backup timer

- name: Verify backup registry is initialized
  shell: |
    set -o allexport
    source /etc/backup/config
    source /etc/backup/credentials
    set +o allexport

    restic snapshots;
  args:
    executable: /bin/bash
  register: verify
  changed_when: verify.rc != 0
  failed_when: "'unable to open config file' not in verify.stderr and verify.rc != 0"

- name: Ensure backup registry is initialized
  shell: |
    set -o allexport
    source /etc/backup/config
    source /etc/backup/credentials
    set +o allexport

    restic init;
  args:
    executable: /bin/bash
  when: verify.rc != 0
